
@rendermode InteractiveServer
<!-- This is a temporary page just so I can debug. We will use this as a component later  :3  -->

<div class="calendar">
    <div class="d-flex flex-row justify-content-center">
        <button class="btn-light" @onclick="() => ChangeMonth(-1)">&lt;</button>
        <h4>@SelectedDay.Month, @SelectedDay.Year</h4>
        <button class="btn-light" @onclick="() => ChangeMonth(1)">&gt;</button>
    </div>
    <button @onclick="SelectToday">Today</button>
    <div class="weeks">
        @foreach (var DayOfWeekName in DaysOfWeek)
        {
            <div class="dayOfWeek">@DayOfWeekName</div>
        }
    </div>
    <div class="monthDaysContainer">
        @for(int i = 0; i < EmptyDaysCounter; i++)
        {
            <div class="emptyDay"></div>
        }
        @foreach(var numDay in NumberDays)
        {
            <div class="monthDay">@numDay</div>
        }
    </div>
</div>

@code {
    public List<string> DaysOfWeek { get; set; } = new() { "SUN", "MON", "TUE", "WED", "THUR", "FRI", "SAT" };
    public List<int> NumberDays { get; set; } = new();
    public DateTime SelectedDay { get; set; } = DateTime.Today;
    public int SelectedMonthString { get; set; }
    public int FirstDayOfWeek { get; set; }
    public int EmptyDaysCounter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        NumberDays = GetMonthsNumberDays();
        EmptyDaysCounter = CalculateFirstDayofWeek();
    }

    public List<int> GetMonthsNumberDays()
    {
        List<int> numDays = new();
        int year = SelectedDay.Year;
        int daysInMonth = DateTime.DaysInMonth(year, SelectedDay.Month);
        for (int day = 1; day <= daysInMonth; day++)
        {
            numDays.Add(day);
        }
        return numDays;
    }

    public int CalculateFirstDayofWeek()
    {
        FirstDayOfWeek = (int)new DateTime(SelectedDay.Year, SelectedDay.Month, 1).DayOfWeek;
        return FirstDayOfWeek;
    }

    public void ChangeMonth(int upOrDown)
    {
        SelectedDay = SelectedDay.AddMonths(upOrDown);

        NumberDays = GetMonthsNumberDays();
        EmptyDaysCounter = CalculateFirstDayofWeek();
    }

    public void SelectToday()
    {
        SelectedDay = DateTime.Today;
        NumberDays = GetMonthsNumberDays();
        EmptyDaysCounter = CalculateFirstDayofWeek();
    }
}
